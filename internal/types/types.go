// Code generated by goctl. DO NOT EDIT.
package types

type IndexResp struct {
	Ping string `json:"ping"`
}

type Empty struct {
}

type Page struct {
	Size  int64      `json:"size,default=20,range=[0:150]"`
	Num   int64      `json:"num,default=1"`
	Sorts []PageSort `json:"sorts,optional"`
}

type PageSort struct {
	Condition string `json:"condition"`
	Order     string `json:"order"`
}

type PageResult struct {
	Rows  []interface{} `json:"rows"`
	Total int64         `json:"total"`
}

type Any struct {
}

type IDS struct {
	IDS []string `json:"ids"`
}

type ID struct {
	ID string `json:"id"`
}

type SEO struct {
	Title       string `json:"title,optional" bson:"title"`
	Keyword     string `json:"keyword,optional" bson:"keyword"`
	Description string `json:"description,optional" bson:"description"`
	Path        string `json:"path,optional" bson:"path"`
	Status      int32  `json:"status,default=1" bson:"status"`
}

type Link struct {
	Href string `json:"href,optional" bson:"href"`
	Name string `json:"name,optional" bson:"name"`
}

type SeoContent struct {
	Title       string `json:"title,optional" bson:"title"`
	Keyword     string `json:"keyword,optional" bson:"keyword"`
	Description string `json:"description,optional" bson:"description"`
}

type ModuleConfig struct {
	Name       string                 `json:"name,optional" bson:"name"`
	ShowStatus int                    `json:"show_status,optional" bson:"show_status"`
	ShowList   []string               `json:"show_list,optional" bson:"show_list"`
	Link       Link                   `json:"link,optional" bson:"link"`
	Status     int                    `json:"status,optional" bson:"status"`
	DataConfig map[string]interface{} `json:"data_config" bson:"data_config"`
}
